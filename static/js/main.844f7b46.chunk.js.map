{"version":3,"sources":["components/Posts.js","App.js","reportWebVitals.js","index.js"],"names":["Post","post","href","url","className","src","social_image","alt","newchain_address","amount","direction","status","id","Posts","useState","posts","setPosts","useEffect","fetch","then","r","json","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAGMA,EAAO,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAF,OACX,mBAAGC,KAAMD,EAAKE,IAAmBC,UAAU,OAA3C,SACE,oCACE,qBAAKC,IAAKJ,EAAKK,aAAcC,IAAKN,EAAKO,mBACvC,gCACE,6BAAKP,EAAKQ,SACV,4BAAIR,EAAKS,YACT,4BAAIT,EAAKU,gBANSV,EAAKW,KAqBhBC,EATD,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACXC,EADW,KACJC,EADI,KAMlB,OAJAC,qBAAU,WACRC,MAlBU,yHAkBGC,MAAK,SAAAC,GAAC,OAAGA,EAAEC,UAAQF,KAAKH,KACpC,IAEID,EAAMO,KAAI,SAAArB,GAAI,OAAI,cAAC,EAAD,CAAMA,KAAMA,QCbxBsB,MANf,WACE,OACI,cAAC,EAAD,KCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.844f7b46.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nconst devTo = 'https://rpc1.newchain.newtonproject.org/newbridge/history?newchain_address=0x97549E368AcaFdCAE786BB93D98379f1D1561a29'\n\nconst Post = ({post}) => (\n  <a href={post.url} key={post.id} className=\"post\">\n    <article>\n      <img src={post.social_image} alt={post.newchain_address} />\n      <div>\n        <h1>{post.amount}</h1>\n        <p>{post.direction}</p>\n        <p>{post.status}</p>\n      </div>\n    </article>\n  </a>\n)\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([])\n  useEffect(() => {\n    fetch(devTo).then(r=> r.json()).then(setPosts)\n  }, [])\n\n  return posts.map(post => <Post post={post} />)\n}\n\nexport default Posts\n","import React from 'react';\nimport Posts from './components/Posts';\n\nfunction App() {\n  return (\n      <Posts />\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}